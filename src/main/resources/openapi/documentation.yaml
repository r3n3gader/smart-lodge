openapi: "3.1.0"
info:
  title: "smart_lodge API"
  description: "smart_lodge API"
  version: "1.0.0"
servers:
- url: "https://smart_lodge"
paths:
  /fotoalbum:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Fotoalbum"
              examples:
                Example#1:
                  description: ""
                  value:
                    fotos: []
  /image/{imageName}:
    get:
      description: ""
      parameters:
      - name: "imageName"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK <br> A file response"
          content:
            application/*:
              schema:
                type: "object"
                format: "binary"
  /upload-images:
    post:
      description: ""
  /user-info:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserInfo"
  /login:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Function1_? super HTML"
              examples:
                text/html:
                  description: "HTML document"
                  value: ""
    post:
      description: ""
      responses:
        "302":
          description: "Found <br> Redirect"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/"
  /logout:
    get:
      description: ""
      responses:
        "302":
          description: "Found <br> Redirect"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/login"
components:
  schemas:
    Foto:
      type: "object"
      properties:
        url:
          type: "string"
        name:
          type: "string"
      required:
      - "url"
      - "name"
    Fotoalbum:
      type: "object"
      properties:
        fotos:
          type: "array"
          items:
            $ref: "#/components/schemas/Foto"
      required:
      - "fotos"
    UserInfo:
      type: "object"
      properties:
        username:
          type: "string"
      required:
      - "username"
    Function1:
      type: "object"
      properties: {}
    Function1_? super HTML:
      type: "object"